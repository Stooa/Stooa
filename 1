wip open ai summary
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# On branch feature/spike-openai
# Your branch is up to date with 'origin/feature/spike-openai'.
#
# Changes to be committed:
#	modified:   frontend/locales/ca/common.json
#	modified:   frontend/locales/ca/form.json
#	modified:   frontend/locales/en/common.json
#	modified:   frontend/locales/en/form.json
#	modified:   frontend/locales/es/common.json
#	modified:   frontend/locales/es/form.json
#	new file:   frontend/src/components/App/ModalEnableAiSummary/ModalEnableAiSummary.tsx
#	new file:   frontend/src/components/App/ModalEnableAiSummary/index.tsx
#	modified:   frontend/src/components/App/ModalKickUser/index.tsx
#	modified:   frontend/src/components/App/ModalStartRecording/index.tsx
#	modified:   frontend/src/components/App/ModalStopRecording/index.tsx
#	modified:   frontend/src/components/Web/Forms/FishbowlForm.tsx
#	modified:   frontend/src/pages/fishbowl/create.tsx
#
# ------------------------ >8 ------------------------
# Do not modify or remove the line above.
# Everything below it will be ignored.
diff --git a/frontend/locales/ca/common.json b/frontend/locales/ca/common.json
index 1f1ad795..fea217cd 100644
--- a/frontend/locales/ca/common.json
+++ b/frontend/locales/ca/common.json
@@ -5,6 +5,7 @@
     "signout": "Surt",
     "register": "Registre gratuït",
     "cancel": "Cancel·la",
+    "modalAccept": "Accepta",
     "cta": "Crear un debat",
     "scheduleFishbowl": "Agendar un fishbowl",
     "hostFishbowlNow": "Començar un fishbowl ara",
diff --git a/frontend/locales/ca/form.json b/frontend/locales/ca/form.json
index 1639a91f..ba58ec61 100644
--- a/frontend/locales/ca/form.json
+++ b/frontend/locales/ca/form.json
@@ -29,7 +29,12 @@
         "isPrivate": "Vull que aquest esdeveniment sigui privat",
         "passwordTooltip": "Per a poder accedir a l'esdeveniment serà necessari ingressar la contrasenya",
         "passwordPlaceholder": "Introdueix la teva contrasenya",
-        "passwordInputLabel": "Contrasenya"
+        "passwordInputLabel": "Contrasenya",
+        "AITitle": "Inteligència Artificial",
+        "hasSummaryLabel": "Vull que la Intel·ligència Artificial generi un resum de la conversa",
+        "hasSummaryTooltip": "Guardaremos las transcripciones de la conversación para poder generar un resumen que encontrarás en el Dashboard, junto al feedback y los asistentes.",
+        "AIDataPrivacyTitle": "Privacitat de les dades",
+        "AIDataPrivacyDescription": "Al activar el resum amb la IA, estas acceptant que Stooa guarde la teva conversa per a poder crear un resum."
     },
     "button": {
         "login": "Entra",
diff --git a/frontend/locales/en/common.json b/frontend/locales/en/common.json
index 4674547f..4bc0595b 100644
--- a/frontend/locales/en/common.json
+++ b/frontend/locales/en/common.json
@@ -4,6 +4,7 @@
     "finishedFishbowlList": "Finished fishbowls",
     "signout": "Log out",
     "register": "Register for free",
+    "modalAccept": "Accept",
     "cancel": "Cancel",
     "cta": "Create a discussion",
     "scheduleFishbowl": "Schedule a fishbowl",
diff --git a/frontend/locales/en/form.json b/frontend/locales/en/form.json
index 8f040917..f8a2e3cf 100644
--- a/frontend/locales/en/form.json
+++ b/frontend/locales/en/form.json
@@ -29,7 +29,12 @@
         "isPrivate": "I want this event to be private",
         "passwordTooltip": "Participants will be required to enter the password in order to access the event",
         "passwordPlaceholder": "Insert your password",
-        "passwordInputLabel": "Password"
+        "passwordInputLabel": "Password",
+        "AITitle": "Artificial intelligence",
+        "hasSummaryLabel": "I want to generate a summary of the conversation with OpenAI GPT model",
+        "hasSummaryTooltip": "We will save the transcriptions of the conversation and generate a summary that you could download at the Dashboard next to the feedback and assistants.",
+        "AIDataPrivacyTitle": "Data privacy",
+        "AIDataPrivacyDescription": "We will save the transcriptions of the conversation and generate a summary that you could download at the Dashboard next to the feedback and assistants."
     },
     "button": {
         "login": "Log in",
diff --git a/frontend/locales/es/common.json b/frontend/locales/es/common.json
index c2d4646a..94c4156f 100644
--- a/frontend/locales/es/common.json
+++ b/frontend/locales/es/common.json
@@ -5,6 +5,7 @@
     "signout": "Salir",
     "register": "Registro gratuito",
     "cancel": "Cancelar",
+    "modalAccept": "Aceptar",
     "cta": "Crear un debate",
     "scheduleFishbowl": "Agendar un fishbowl",
     "hostFishbowlNow": "Empezar un fishbowl ahora",
diff --git a/frontend/locales/es/form.json b/frontend/locales/es/form.json
index 5c46ddb4..019bc529 100644
--- a/frontend/locales/es/form.json
+++ b/frontend/locales/es/form.json
@@ -29,7 +29,12 @@
         "isPrivate": "Quiero que el evento sea privado",
         "passwordTooltip": "Para poder acceder al evento será necesario ingresar la contraseña",
         "passwordPlaceholder": "Inserta tu contraseña",
-        "passwordInputLabel": "Contraseña"
+        "passwordInputLabel": "Contraseña",
+        "AITitle": "Inteligència Artificial",
+        "hasSummaryLabel": "Vull que la Intel·ligència Artificial generi un resum de la conversa",
+        "hasSummaryTooltip": "Guardaremos las transcripciones de la conversación para poder generar un resumen que encontrarás en el Dashboard, junto al feedback y los asistentes.",
+        "AIDataPrivacyTitle": "Privacidad de datos",
+        "AIDataPrivacyDescription": "Al activar el resumen con IA, estás aceptando que Stooa guarde la transcripción de la conversación para poder realiar un resumen con OpenAI GPT"
     },
     "button": {
         "login": "Entra",
diff --git a/frontend/src/components/App/ModalEnableAiSummary/ModalEnableAiSummary.tsx b/frontend/src/components/App/ModalEnableAiSummary/ModalEnableAiSummary.tsx
new file mode 100644
index 00000000..f2d1c47d
--- /dev/null
+++ b/frontend/src/components/App/ModalEnableAiSummary/ModalEnableAiSummary.tsx
@@ -0,0 +1,40 @@
+/*!
+ * This file is part of the Stooa codebase.
+ *
+ * (c) 2020 - present Runroom SL
+ *
+ * For the full copyright and license information, please view the LICENSE
+ * file that was distributed with this source code.
+ */
+
+import React from 'react';
+import useTranslation from 'next-translate/useTranslation';
+
+import { StyledLeftAlignedModal } from '@/ui/Modal';
+import Cross from '@/ui/svg/cross.svg';
+import Button from '@/components/Common/Button';
+
+interface Props {
+  closeModal: () => void;
+}
+
+const ModalEnableAiSummary = ({ closeModal }: Props) => {
+  const { t } = useTranslation('form');
+
+  return (
+    <StyledLeftAlignedModal>
+      <div className="content">
+        <button className="close" onClick={closeModal}>
+          <Cross />
+        </button>
+        <h2 className="title-sm">{t('fishbowl.AIDataPrivacyTitle')}</h2>
+        <p className="description">{t('fishbowl.AIDataPrivacyDescription')}</p>
+        <div className="modal-footer">
+          <Button onClick={closeModal}>{t('common:modalAccept')}</Button>
+        </div>
+      </div>
+    </StyledLeftAlignedModal>
+  );
+};
+
+export default ModalEnableAiSummary;
diff --git a/frontend/src/components/App/ModalEnableAiSummary/index.tsx b/frontend/src/components/App/ModalEnableAiSummary/index.tsx
new file mode 100644
index 00000000..38a59595
--- /dev/null
+++ b/frontend/src/components/App/ModalEnableAiSummary/index.tsx
@@ -0,0 +1,11 @@
+/*!
+ * This file is part of the Stooa codebase.
+ *
+ * (c) 2020 - present Runroom SL
+ *
+ * For the full copyright and license information, please view the LICENSE
+ * file that was distributed with this source code.
+ */
+
+export { default } from './ModalEnableAiSummary';
+export * from './ModalEnableAiSummary';
diff --git a/frontend/src/components/App/ModalKickUser/index.tsx b/frontend/src/components/App/ModalKickUser/index.tsx
index 86bb4ea7..6586a217 100644
--- a/frontend/src/components/App/ModalKickUser/index.tsx
+++ b/frontend/src/components/App/ModalKickUser/index.tsx
@@ -21,7 +21,7 @@ interface Props {
   participant: Participant;
 }
 
-const ModalKickUser: React.FC<Props> = ({ closeModal, onSubmit, participant }) => {
+const ModalKickUser = ({ closeModal, onSubmit, participant }: Props) => {
   const { t } = useTranslation('fishbowl');
 
   return (
diff --git a/frontend/src/components/App/ModalStartRecording/index.tsx b/frontend/src/components/App/ModalStartRecording/index.tsx
index 4ecd9296..27f67c09 100644
--- a/frontend/src/components/App/ModalStartRecording/index.tsx
+++ b/frontend/src/components/App/ModalStartRecording/index.tsx
@@ -19,7 +19,7 @@ interface Props {
   closeModal: () => void;
 }
 
-const ModalStartRecording: React.FC<Props> = ({ closeModal, startRecording }) => {
+const ModalStartRecording = ({ closeModal, startRecording }: Props) => {
   const { t } = useTranslation('fishbowl');
 
   return (
diff --git a/frontend/src/components/App/ModalStopRecording/index.tsx b/frontend/src/components/App/ModalStopRecording/index.tsx
index 1af552fc..230292d5 100644
--- a/frontend/src/components/App/ModalStopRecording/index.tsx
+++ b/frontend/src/components/App/ModalStopRecording/index.tsx
@@ -18,7 +18,7 @@ interface Props {
   closeModal: () => void;
 }
 
-const ModalStopRecording: React.FC<Props> = ({ closeModal, stopRecording }) => {
+const ModalStopRecording = ({ closeModal, stopRecording }: Props) => {
   const { t } = useTranslation('fishbowl');
 
   return (
diff --git a/frontend/src/components/Web/Forms/FishbowlForm.tsx b/frontend/src/components/Web/Forms/FishbowlForm.tsx
index 891bb97e..1b8cd8b7 100644
--- a/frontend/src/components/Web/Forms/FishbowlForm.tsx
+++ b/frontend/src/components/Web/Forms/FishbowlForm.tsx
@@ -40,6 +40,7 @@ interface Props {
   isFull?: boolean;
   isEditForm?: boolean;
   onSaveCallback?: (data: Fishbowl) => void;
+  setShowModal?: (value: boolean) => void;
 }
 
 interface FormValues {
@@ -54,6 +55,7 @@ interface FormValues {
   hasIntroduction: boolean;
   isPrivate: boolean;
   plainPassword?: string;
+  hasSummary: boolean;
 }
 
 const initialValues = {
@@ -66,21 +68,11 @@ const initialValues = {
   timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
   hasIntroduction: false,
   isPrivate: false,
-  plainPassword: undefined
+  plainPassword: undefined,
+  hasSummary: false
 };
 
 const mapSelectedFishbowl = (fishbowl: Fishbowl): FormValues => {
-  // const stringDate = fishbowl.startDateTimeTz.toString();
-  // const sign = stringDate.charAt(stringDate.length - 6);
-  // const timezoneHours = parseInt(stringDate.slice(-5, -3), 10);
-  // const timezoneDifferenceInMs = timezoneHours * 60 * 60 * 1000;
-
-  // const timestamp = new Date(fishbowl.startDateTimeTz).getTime();
-  // const adjustedTime =
-  //   timestamp + (sign === '-' ? -timezoneDifferenceInMs : timezoneDifferenceInMs);
-  // const userTimezoneOffset = new Date().getTimezoneOffset() * 60000;
-  // const formattedDate = new Date(adjustedTime + userTimezoneOffset);
-
   const timestamp = new Date(fishbowl.startDateTimeTz).getTime();
 
   // Extract timezone difference from startDateTimeTz in minutes
@@ -105,7 +97,8 @@ const mapSelectedFishbowl = (fishbowl: Fishbowl): FormValues => {
     timezone: fishbowl.timezone,
     hasIntroduction: fishbowl.hasIntroduction ?? false,
     isPrivate: fishbowl.isPrivate,
-    plainPassword: fishbowl.isPrivate ? fishbowl.plainPassword : ''
+    plainPassword: fishbowl.isPrivate ? fishbowl.plainPassword : '',
+    hasSummary: fishbowl.hasSummary ?? false
   };
 };
 
@@ -113,7 +106,8 @@ const FishbowlForm = ({
   selectedFishbowl,
   isFull = false,
   isEditForm = false,
-  onSaveCallback
+  onSaveCallback,
+  setShowModal
 }: Props) => {
   const { t, lang } = useTranslation('form');
   const timezones = countriesAndTimezones.getAllTimezones();
@@ -136,7 +130,6 @@ const FishbowlForm = ({
 
   const requiredError = t('validation.required');
   const minimumLength = t('validation.fishbowlPasswordLength');
-  // const dateError = t('validation.date');
 
   const schema = Yup.object({
     title: Yup.string().matches(/[^-\s]/, {
@@ -157,6 +150,7 @@ const FishbowlForm = ({
 
   const methods = useForm<FormValues>({
     resolver: yupResolver(schema),
+    mode: 'onChange',
     defaultValues: { ...initialValues, language: lang, plainPassword: getRandomPassword() }
   });
 
@@ -171,6 +165,12 @@ const FishbowlForm = ({
 
   const watchIsPrivate = watch('isPrivate');
 
+  const handleSummaryOnClick = (event: React.MouseEvent<HTMLInputElement>) => {
+    if (getValues('hasSummary') === false && setShowModal) {
+      setShowModal(true);
+    }
+  };
+
   const onCompletedSubmit = res => {
     if (res.type === 'Error') {
       console.error('[STOOA] Error', res);
@@ -269,7 +269,7 @@ const FishbowlForm = ({
             isPrivate: values.isPrivate,
             plainPassword:
               values.isPrivate && values.plainPassword ? values.plainPassword : undefined,
-            hasSummary: true
+            hasSummary: values.hasSummary
           }
         }
       })
@@ -468,6 +468,25 @@ const FishbowlForm = ({
             />
           )}
         </fieldset>
+        <fieldset>
+          <TextDivider>
+            <p>{t('fishbowl.AITitle')}</p>
+            <span></span>
+          </TextDivider>
+          <Switch
+            onClick={handleSummaryOnClick}
+            id="hasSummary"
+            full
+            tooltipText={
+              <Trans
+                i18nKey="form:fishbowl.hasSummaryTooltip"
+                components={{ span: <span className="medium" /> }}
+              />
+            }
+            label={t('fishbowl.hasSummaryLabel')}
+            {...register('hasSummary')}
+          />
+        </fieldset>
         <fieldset>
           <SubmitBtn
             data-testid="fishbowl-submit"
diff --git a/frontend/src/pages/fishbowl/create.tsx b/frontend/src/pages/fishbowl/create.tsx
index 4cccf383..3c05ee27 100644
--- a/frontend/src/pages/fishbowl/create.tsx
+++ b/frontend/src/pages/fishbowl/create.tsx
@@ -7,7 +7,7 @@
  * file that was distributed with this source code.
  */
 
-import { useEffect } from 'react';
+import { useEffect, useState } from 'react';
 import useTranslation from 'next-translate/useTranslation';
 
 import Layout from '@/layouts/Default';
@@ -16,9 +16,12 @@ import { useStateValue } from '@/contexts/AppContext';
 
 import { IConferenceStatus } from '@/jitsi/Status';
 
+import ModalEnableAiSummary from '@/components/App/ModalEnableAiSummary';
+
 const Create = () => {
   const { t } = useTranslation('fishbowl');
   const [, dispatch] = useStateValue();
+  const [showAIPrivacyModal, setShowAIPrivacyModal] = useState(false);
 
   useEffect(() => {
     dispatch({
@@ -33,8 +36,11 @@ const Create = () => {
 
   return (
     <Layout title={t('title')}>
+      {showAIPrivacyModal && (
+        <ModalEnableAiSummary closeModal={() => setShowAIPrivacyModal(false)} />
+      )}
       <h1 className="title-md form-title">{t('title')}</h1>
-      <FishbowlForm />
+      <FishbowlForm setShowModal={setShowAIPrivacyModal} />
     </Layout>
   );
 };
